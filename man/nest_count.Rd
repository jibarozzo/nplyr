% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nest_count-tally.R
\name{nest_count}
\alias{nest_count}
\alias{nest_add_count}
\title{Count observations by group in nested data frames}
\usage{
nest_count(.data, .nest_data, ..., wt = NULL, sort = FALSE, name = NULL)

nest_add_count(.data, .nest_data, ..., wt = NULL, sort = FALSE, name = NULL)
}
\arguments{
\item{.data}{A data frame, data frame extension (e.g. a tibble), or a lazy
lazy data frame (e.g. from dbplyr or dtplyr).}

\item{.nest_data}{A list-col containing a data frames (or tibbles).}

\item{...}{data masking variables to group by.}

\item{wt}{data masking frequency weights. Can be \code{NULL} or a variable:
\itemize{
\item If \code{NULL} (the default), counts the number of rows in each group.
\item If a variable, computes \code{sum(wt)} for each group.
}}

\item{sort}{If \code{TRUE}, will show the largest groups at the top.}

\item{name}{The name of the new column in the output.}
}
\value{
A tibble or data frame. \code{nest_count()} and \code{nest_add_count()} group transiently,
so the nested data frames have the same groups as the input.
}
\description{
\code{nest_count()} lets you quickly count the unique values of one or more variables
within a nested data frame or tibble.

\code{nest_add_count()} adds a column to nested data frames/tibbles with group-wise
counts.

These functions are largely wrappers around their \code{dplyr} counterparts - for
more information, please consult the documentation for \code{dplyr::count()}.
}
\examples{
\dontrun{
library(tidyverse)
library(gapminder)

# find the count of each country within each tibble
gapminder \%>\%
  nest(country_data = -continent) \%>\%
  nest_count(country_data, country)
  
# add a new column with the count of each country within each tibble
gapminder \%>\%
  nest(country_data = -continent) \%>\%
  nest_add_count(country_data, country) 
}
}
