% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nest_join.R
\name{nest_nest_join}
\alias{nest_nest_join}
\title{Nested nest join}
\usage{
nest_nest_join(
  .data,
  .nest_data,
  y,
  by = NULL,
  copy = FALSE,
  keep = FALSE,
  name = NULL,
  ...
)
}
\arguments{
\item{.data}{A data frame, data frame extension (e.g., a tibble), or a lazy
data frame (e.g. from dbplyr or dtplyr).}

\item{.nest_data}{A list-column containing data frames}

\item{y}{A data frame, data frame extension (e.g., a tibble), or a lazy data
frame (e.g., from dbplyr or dtplyr).}

\item{by}{A character vector of variables to join by or a join specification
created with \code{join_by()}.}

\item{copy}{If \code{.nest_data} and \code{y} are not from the same data source and
\code{copy = TRUE} then \code{y} will be copied into the same src as \code{.nest_data}.
\emph{(Need to review this parameter in more detail for applicability with nplyr)}}

\item{keep}{Should the join keys from both \code{.nest_data} and \code{y} be preserved
in the output?}

\item{name}{The name of the list column nesting joins create. If \code{NULL}, the
name of \code{y} is used.}

\item{...}{Other parameters passed onto methods. Includes:
\itemize{
\item \code{na_matches} : Should two \code{NA} or two \code{NaN} values match?
\itemize{
\item \code{"na"}, the default, treats two \code{NA} or two \code{NaN} values as equal.
\item \code{"never"} treats two \code{NA} or two \code{NaN} values as different, and will
never match them together or to any other values.
}
\item \code{multiple} : Handlind of rows in \code{.nest_data} with multiple matches in \code{y}.
\itemize{
\item \code{"all"} returns every match detected in \code{y}.
\item \code{"any"} returns one match detected in \code{y}, with no guarantees on which
match will be returned. It is often faster than \code{"first"} and \code{"last"} if
you just need to detect if there is at least one match.
\item \code{"first"} returns the first match detected in \code{y}.
\item \code{"last"} returns the last match detected in \code{y}.
\item \code{"warning"} throws a warning if multiple matches are detected, and then
falls back to \code{"all"}.
\item \code{"error"} throws an error if multiple matches are detected.
}
\item \code{unmatched} : How should unmatched keys that would result in dropped rows
be handled?
\itemize{
\item \code{"drop"} drops unmatched keys from the result.
\item \code{"error"} throws an error if unmatched keys are detected.
}
}}
}
\description{
\code{nest_nest_join()} returns all rows and columns in \code{.nest_data} with a new
nested-df column that contains all matches from \code{y}. When there is no match,
the list contains a 0-row tibble.
}
\details{
\code{nest_nest_join()} is largely a wrapper around \code{\link[dplyr:nest_join]{dplyr::nest_join()}} and
maintains the functionality of \code{nest_join()} within east nested data frame.
For more information on \code{nest_join()}, please refer to the documentation in
\href{https://dplyr.tidyverse.org/}{\code{dplyr}}.
}
\examples{
\dontrun{
gm_nest <- gapminder::gapminder \%>\% tidyr::nest(country_data = -continent)
gm_codes <- gapminder::country_codes

gm_nest \%>\% nest_nest_join(country_data, country_codes, by = "country")
}
}
\seealso{
Other joins: 
\code{\link{nest-filter-joins}},
\code{\link{nest-mutate-joins}}
}
\concept{joins}
